{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"J:\\\\Reactjs\\\\image-upload\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: '',\n      image: null\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      this.setState({\n        image: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      let form_data = new FormData();\n      form_data.append('image', this.state.image, this.state.image.name);\n      form_data.append('title', this.state.title);\n      form_data.append('content', this.state.content);\n      let url = 'http://localhost:8000/api/posts/';\n      axios.post(url, form_data, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n        }\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => console.log(err));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            id: \"title\",\n            value: this.state.title,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Content\",\n            id: \"content\",\n            value: this.state.content,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image\",\n            accept: \"image/png, image/jpeg\",\n            onChange: this.handleImageChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // import logo from './logo.svg';\n// import './App.css';\n// import { useState } from 'react';\n// import ImageUploader from 'react-images-upload';\n// import Axios from 'axios';\n// const UploadComponent = props => (\n//   <form>\n//       <label>\n//           File Upload URL:\n//           <input id=\"urlInput\" type=\"text\" onChange={props.onUrlChange} value={props.url}></input>\n//       </label>\n//       <ImageUploader\n//           key=\"image-uploader\"\n//           withIcon={true}\n//           singleImage={true}\n//           withPreview={true}\n//           label=\"Maximum size file: 5MB\"\n//           buttonText=\"Choose an image\"\n//           onChange={props.onImage}\n//           imgExtension={['.jpg', '.png', '.jpeg']}\n//           maxFileSize={5242880}\n//       ></ImageUploader>\n//   </form>\n// );\n// // const UploadComponent=props => {\n// //   <form>\n// //     <label>\n// //       File Upload URL:\n// //       <input id='urlInput' type='text' onChange={props.onUrlChange} value={props.url}></input>\n// //     </label>\n// //     <ImageUploder\n// //       key='image-uploader'\n// //       withIcon={true}\n// //       SingleImage={true}\n// //       withPreview={true}\n// //       label=\"Maximum size file: 5MB\"\n// //       buttonText='Choose an Image'\n// //       onChange={props.onImage}\n// //       imageExtension={['.jpg','.png','jpeg']}\n// //       maxFileSize={5242880}></ImageUploder>\n// //   </form>\n// // }\n// const App = () => {\n//   const [progress,setProgress] = useState ('getUplaod')\n//   const [url, setImageURL] = useState (undefined)\n//   const [errorMessage, setErrorMessage]= useState('')\n//   const onUrlChange = e => {\n//     setImageURL(e.target.value);\n//   };\n//   const onImage=async(failedImages, successImages) => {\n//     // if (!url)\n//     // {\n//     //   console.log('missing Url')\n//     //   setErrorMessage('missing a url to upload')\n//     //   setProgress('uploadError');\n//     //   return\n//     // }\n//     setProgress('uploading');\n//       try {\n//         console.log('successImages',successImages);\n//         const parts = successImages[0].split(':')\n//         const mine= parts[0].split(':')[1];\n//         const name= parts[1].split('=')[1];\n//         const data=parts[2];\n//         console.log(parts);\n//         // const res=await Axios.post(url, {mine, name, image:data});\n//         // console.log(res);\n//         // setImageURL(res.data.imageURL)\n//         setProgress('uploaded')\n//       }\n//       catch (error){\n//         console.log('error in upload',error);\n//         setErrorMessage(error.message);\n//         setProgress('uploadError')\n//       }\n//   }\n//   const content = () =>\n//   {\n//     switch(progress){\n//       case 'getUplaod':\n//         return <UploadComponent onUrlChange={onUrlChange} onImage={onImage} url={url}/>\n//       case 'uploading':\n//         return <h2>Uploading...</h2>\n//       case 'uploaded':\n//         return <img scr={url} alt='uploaded' />\n//       case 'uploadError':\n//         return (\n//           <>\n//           <div>Error Message={errorMessage}</div>\n//           <UploadComponent onUrlChange={onUrlChange} onImage={onImage} url={url}/>\n//           </>\n//         )\n//     }\n//   }\n//   return (\n//     <div className=\"App\">\n//       <h1>Image Upload </h1>\n//       {content()}\n//     </div>\n//   )\n// }\n// export default App","map":{"version":3,"sources":["J:/Reactjs/image-upload/src/App.js"],"names":["React","Component","axios","App","state","title","content","image","handleChange","e","setState","target","id","value","handleImageChange","files","handleSubmit","preventDefault","console","log","form_data","FormData","append","name","url","post","headers","then","res","data","catch","err","render"],"mappings":"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":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state = {\n    title: '',\n    content: '',\n    image: null\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  };\n\n  handleImageChange = (e) => {\n    this.setState({\n      image: e.target.files[0]\n    })\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    let form_data = new FormData();\n    form_data.append('image', this.state.image, this.state.image.name);\n    form_data.append('title', this.state.title);\n    form_data.append('content', this.state.content);\n    let url = 'http://localhost:8000/api/posts/';\n    axios.post(url, form_data, {\n      headers: {\n        'content-type': 'multipart/form-data',\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n      }\n    })\n        .then(res => {\n          console.log(res.data);\n        })\n        .catch(err => console.log(err))\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <input type=\"text\" placeholder='Title' id='title' value={this.state.title} onChange={this.handleChange} required/>\n          </p>\n          <p>\n            <input type=\"text\" placeholder='Content' id='content' value={this.state.content} onChange={this.handleChange} required/>\n\n          </p>\n          <p>\n            <input type=\"file\"\n                   id=\"image\"\n                   accept=\"image/png, image/jpeg\"  onChange={this.handleImageChange} required/>\n          </p>\n          <input type=\"submit\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// import logo from './logo.svg';\n// import './App.css';\n// import { useState } from 'react';\n// import ImageUploader from 'react-images-upload';\n// import Axios from 'axios';\n// const UploadComponent = props => (\n//   <form>\n//       <label>\n//           File Upload URL:\n//           <input id=\"urlInput\" type=\"text\" onChange={props.onUrlChange} value={props.url}></input>\n//       </label>\n//       <ImageUploader\n//           key=\"image-uploader\"\n//           withIcon={true}\n//           singleImage={true}\n//           withPreview={true}\n//           label=\"Maximum size file: 5MB\"\n//           buttonText=\"Choose an image\"\n//           onChange={props.onImage}\n//           imgExtension={['.jpg', '.png', '.jpeg']}\n//           maxFileSize={5242880}\n//       ></ImageUploader>\n//   </form>\n// );\n\n// // const UploadComponent=props => {\n// //   <form>\n// //     <label>\n// //       File Upload URL:\n// //       <input id='urlInput' type='text' onChange={props.onUrlChange} value={props.url}></input>\n// //     </label>\n// //     <ImageUploder\n// //       key='image-uploader'\n// //       withIcon={true}\n// //       SingleImage={true}\n// //       withPreview={true}\n// //       label=\"Maximum size file: 5MB\"\n// //       buttonText='Choose an Image'\n// //       onChange={props.onImage}\n// //       imageExtension={['.jpg','.png','jpeg']}\n// //       maxFileSize={5242880}></ImageUploder>\n// //   </form>\n// // }\n\n// const App = () => {\n\n//   const [progress,setProgress] = useState ('getUplaod')\n//   const [url, setImageURL] = useState (undefined)\n//   const [errorMessage, setErrorMessage]= useState('')\n//   const onUrlChange = e => {\n//     setImageURL(e.target.value);\n//   };\n//   const onImage=async(failedImages, successImages) => {\n//     // if (!url)\n//     // {\n//     //   console.log('missing Url')\n//     //   setErrorMessage('missing a url to upload')\n//     //   setProgress('uploadError');\n//     //   return\n//     // }\n//     setProgress('uploading');\n  \n//       try {\n//         console.log('successImages',successImages);\n//         const parts = successImages[0].split(':')\n//         const mine= parts[0].split(':')[1];\n//         const name= parts[1].split('=')[1];\n//         const data=parts[2];\n//         console.log(parts);\n//         // const res=await Axios.post(url, {mine, name, image:data});\n//         // console.log(res);\n//         // setImageURL(res.data.imageURL)\n//         setProgress('uploaded')\n//       }\n    \n//       catch (error){\n//         console.log('error in upload',error);\n//         setErrorMessage(error.message);\n//         setProgress('uploadError')\n\n//       }\n//   }\n//   const content = () =>\n//   {\n//     switch(progress){\n//       case 'getUplaod':\n//         return <UploadComponent onUrlChange={onUrlChange} onImage={onImage} url={url}/>\n//       case 'uploading':\n//         return <h2>Uploading...</h2>\n//       case 'uploaded':\n//         return <img scr={url} alt='uploaded' />\n//       case 'uploadError':\n//         return (\n//           <>\n//           <div>Error Message={errorMessage}</div>\n//           <UploadComponent onUrlChange={onUrlChange} onImage={onImage} url={url}/>\n//           </>\n//         )\n//     }\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Image Upload </h1>\n//       {content()}\n//     </div>\n//   )\n// }\n\n\n// export default App"]},"metadata":{},"sourceType":"module"}